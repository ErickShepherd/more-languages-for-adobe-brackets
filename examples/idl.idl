;; Accessed by:    Erick Edward Shepherd
;; Accessed on:    2018-06-06
;; Language:       IDL
;; Source entity:  CodeMirror
;; Source site:    codemirror.net/mode/idl/index.html
;; 
;; Purpose:        Example to test plugin success in syntax highlighting.
;; 
;; License:        MIT License
;; 
;;                 Copyright (C) 2017 by Marijn Haverbeke <marijnh@gmail.com> 
;;                 and others
;; 
;;                 Permission is hereby granted, free of charge, to any person 
;;                 obtaining a copy of this software and associated  
;;                 documentation files (the "Software"), to deal in the Software
;;                 without restriction, including without limitation the rights 
;;                 to use, copy, modify, merge, publish, distribute, sublicense,
;;                 and/or sell copies of the Software, and to permit persons to 
;;                 whom the Software is furnished to do so, subject to the 
;;                 following conditions:
;; 
;;                 The above copyright notice and this permission notice shall
;;                 be included in all copies or substantial portions of the 
;;                  Software.
;; 
;;                 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY  
;;                 KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE  
;;                 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
;;                 PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
;;                 COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
;;                 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR  
;;                 OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
;;                 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  

;; Example IDL code
FUNCTION mean_and_stddev,array
  ;; This program reads in an array of numbers
  ;; and returns a structure containing the
  ;; average and standard deviation

  ave = 0.0
  count = 0.0

  for i=0,N_ELEMENTS(array)-1 do begin
      ave = ave + array[i]
      count = count + 1
  endfor
  
  ave = ave/count

  std = stddev(array)  

  return, {average:ave,std:std}

END

    